/* 
 * File:   
 * Author: 
 * Comments:
 * Revision history: 
 */

extern void Sweep_PWM(void);
extern void Sweep_PWM_init(void);
//volatile char RxAr[450];
volatile char *RxArPtr;
volatile int i = 0;

typedef union {
    unsigned int DC[256];
    struct{
    unsigned DCL :8;
    unsigned DCH :8;
    }PWM[256];
}PWM_16;

const PWM_16 PWM={
0x0000,	0x001E,	0x001E,	0x001F,	0x0020,	0x0021,	0x0022,	0x0023,	0x0023,	0x0024,	//9
0x0025,	0x0026,	0x0027,	0x0028,	0x0029,	0x002B,	0x002C,	0x002D,	0x002E,	0x002F,	//19
0x0031,	0x0032,	0x0033,	0x0034,	0x0036,	0x0037,	0x0039,	0x003A,	0x003C,	0x003D,	//29
0x003F,	0x0041,	0x0042,	0x0044,	0x0046,	0x0048,	0x004A,	0x004C,	0x004E,	0x0050,	//39
0x0052,	0x0054,	0x0056,	0x0058,	0x005B,	0x005D,	0x005F,	0x0062,	0x0065,	0x0067,	//49
0x006A,	0x006D,	0x0070,	0x0072,	0x0075,	0x0079,	0x007C,	0x007F,	0x0082,	0x0086,	//59
0x0089,	0x008D,	0x0091,	0x0094,	0x0098,	0x009C,	0x00A0,	0x00A5,	0x00A9,	0x00AD,	//69
0x00B2,	0x00B6,	0x00BB,	0x00C0,	0x00C5,	0x00CA,	0x00D0,	0x00D5,	0x00DB,	0x00E0,	//79
0x00E6,	0x00EC,	0x00F3,	0x00F9,	0x0100,	0x0106,	0x010D,	0x0114,	0x011B,	0x0123,	//89
0x012A,	0x0132,	0x013A,	0x0143,	0x014B,	0x0154,	0x015D,	0x0166,	0x016F,	0x0179,	//99
0x0183,	0x018D,	0x0197,	0x01A2,	0x01AD,	0x01B8,	0x01C3,	0x01CF,	0x01DB,	0x01E8,	//109
0x01F5,	0x0202,	0x020F,	0x021D,	0x022B,	0x023A,	0x0249,	0x0258,	0x0268,	0x0278,	//119
0x0288,	0x0299,	0x02AB,	0x02BD,	0x02CF,	0x02E2,	0x02F5,	0x0309,	0x031D,	0x0332,	//129
0x0348,	0x035D,	0x0374,	0x038B,	0x03A3,	0x03BB,	0x03D4,	0x03EE,	0x0408,	0x0423,	//139
0x043F,	0x045C,	0x0479,	0x0497,	0x04B5,	0x04D5,	0x04F5,	0x0517,	0x0539,	0x055C,	//149
0x0580,	0x05A5,	0x05CA,	0x05F1,	0x0619,	0x0642,	0x066C,	0x0697,	0x06C3,	0x06F0,	//159
0x071F,	0x074E,	0x077F,	0x07B2,	0x07E5,	0x081A,	0x0850,	0x0888,	0x08C1,	0x08FC,	//169
0x0938,	0x0976,	0x09B5,	0x09F6,	0x0A39,	0x0A7E,	0x0AC4,	0x0B0C,	0x0B56,	0x0BA2,	//179
0x0BF0,	0x0C40,	0x0C92,	0x0CE6,	0x0D3D,	0x0D95,	0x0DF0,	0x0E4E,	0x0EAD,	0x0F10,	//189
0x0F75,	0x0FDC,	0x1046,	0x10B4,	0x1123,	0x1196,	0x120C,	0x1285,	0x1301,	0x1380,	//199
0x1403,	0x1489,	0x1513,	0x15A0,	0x1631,	0x16C5,	0x175E,	0x17FA,	0x189B,	0x1940,	//209
0x19E9,	0x1A97,	0x1B49,	0x1C00,	0x1CBB,	0x1D7C,	0x1E41,	0x1F0C,	0x1FDC,	0x20B1,	//219
0x218C,	0x226D,	0x2354,	0x2440,	0x2533,	0x262C,	0x272C,	0x2833,	0x2940,	0x2A54,	//229
0x2B70,	0x2C93,	0x2DBD,	0x2EF0,	0x302A,	0x316D,	0x32B8,	0x340C,	0x3569,	0x36CE,	//239
0x383D,	0x39B6,	0x3B39,	0x3CC6,	0x3E5D,	0x3FFF,	0x3FFF,	0x3FFF,	0x3FFF,	0x3FFF,	//249
0x3FFF,	0x3FFF,	0x3FFF,	0x3FFF,	0x3FFF,	0x3FFF,	
};


char *PWMDCLptr[4];
char *PWMDCHptr[4];
char *PWMLDCONptr[4];

//#define PWMDCH[0] PWM1DCH
//#define PWMDCL[0] PWM1DCH
//#define PWMDCH[1] PWM2DCH
//#define PWMDCL[1] PWM2DCH
//#define PWMDCH[2] PWM3DCH
//#define PWMDCL[2] PWM3DCH
//#define PWMDCH[3] PWM4DCH
//#define PWMDCL[3] PWM4DCH
//
//#define PWMLDCON[0]=PWM1LDCON
//#define PWMLDCON[1]=PWM2LDCON
//#define PWMLDCON[2]=PWM3LDCON
//#define PWMLDCON[3]=PWM4LDCON



//0x0000, 0x0046, 0x0046, 0x0046, 0x0046, 0x0046, 0x0046, 0x0048, 0x0048, 0x0048,
//    0x0048, 0x0049, 0x0049, 0x0049, 0x004A, 0x004A, 0x004C, 0x004D, 0x004D, 0x004E,
//    0x0050, 0x0052, 0x0053, 0x0054, 0x0056, 0x0058, 0x005A, 0x005C, 0x005E, 0x0060,
//    0x0062, 0x0064, 0x0067, 0x006A, 0x006C, 0x006F, 0x0072, 0x0076, 0x007A, 0x007C,
//    0x0080, 0x0083, 0x0088, 0x008A, 0x008E, 0x0092, 0x0098, 0x009E, 0x00A4, 0x00AC,
//    0x00B4, 0x00BC, 0x00C0, 0x00C8, 0x00D0, 0x00DE, 0x00E4, 0x00EC, 0x00F6, 0x0106,
//    0x010E, 0x0116, 0x011E, 0x012C, 0x0134, 0x013C, 0x0146, 0x0156, 0x0160, 0x0168,
//    0x0176, 0x0182, 0x018A, 0x0196, 0x01A6, 0x01B2, 0x01BE, 0x01CC, 0x01D8, 0x01E4,
//    0x01F6, 0x0202, 0x020E, 0x0220, 0x0230, 0x0240, 0x024C, 0x0262, 0x0270, 0x0280,
//    0x0292, 0x02A2, 0x02B6, 0x02C6, 0x02D6, 0x02EA, 0x0300, 0x031C, 0x0326, 0x0336,
//    0x0348, 0x0360, 0x0376, 0x0386, 0x039E, 0x03B0, 0x03C8, 0x03DC, 0x03F4, 0x0406,
//    0x041C, 0x043A, 0x044C, 0x0468, 0x047E, 0x0496, 0x04B2, 0x04C8, 0x04E0, 0x04F8,
//    0x0514, 0x0530, 0x054C, 0x0566, 0x0580, 0x059C, 0x05B8, 0x05D8, 0x05F4, 0x060E,
//    0x0628, 0x0648, 0x0668, 0x0688, 0x06A4, 0x06C4, 0x06DC, 0x0704, 0x0724, 0x0740,
//    0x0764, 0x0784, 0x07A4, 0x07C8, 0x07EC, 0x0810, 0x0830, 0x0850, 0x0870, 0x0898,
//    0x08C0, 0x08E8, 0x0908, 0x0930, 0x0958, 0x0980, 0x09A0, 0x09C8, 0x09F0, 0x0A18,
//    0x0A40, 0x0A68, 0x0A94, 0x0ABC, 0x0AE4, 0x0B10, 0x0B38, 0x0B60, 0x0B8C, 0x0BB4,
//    0x0BE8, 0x0C16, 0x0C40, 0x0C6C, 0x0C98, 0x0CCC, 0x0CFC, 0x0D28, 0x0D58, 0x0D88,
//    0x0DB8, 0x0DE8, 0x0E18, 0x0E48, 0x0E78, 0x0EA8, 0x0EE0, 0x0F10, 0x0F48, 0x0F7C,
//    0x0FB0, 0x0FE4, 0x1018, 0x1050, 0x1088, 0x10BC, 0x10F4, 0x112C, 0x1164, 0x1198,//200
//    0x11D0, 0x120C, 0x1244, 0x127C, 0x12B4, 0x12F0, 0x1328, 0x136C, 0x13A8, 0x13E4,
//    0x1420, 0x145C, 0x149C, 0x14DC, 0x1518, 0x1558, 0x159C, 0x15DC, 0x161C, 0x165C,
//    0x169C, 0x16E0, 0x1728, 0x1768, 0x17A8, 0x17F0, 0x1838, 0x1878, 0x18C0, 0x1904,
//    0x1948, 0x1998, 0x19E0, 0x1A28, 0x1A70, 0x1AB8, 0x1B00, 0x1B48, 0x1B90, 0x1BE0,
//    0x1C30, 0x1C80, 0x1CC8, 0x1D18, 0x1D68, 0x1D80, 0x1DB8, 0x1E08, 0x1E50, 0x1EA0,
//    0x1EE8, 0x1F30, 0x1F78, 0x1FC0, 0x1FE8, 0x1FFF